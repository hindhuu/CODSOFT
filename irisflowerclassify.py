# -*- coding: utf-8 -*-
"""IrisFlowerClassify.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EudyMG2ioWkQD3HehOnHp0-pGKbbJgCw

Task 3: Iris Flower Classification
"""

# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.datasets import load_iris
import seaborn as sns
import matplotlib.pyplot as plt

# Step 2: Load the Iris dataset
iris = load_iris()

# Convert the dataset to a Pandas DataFrame
iris_data = pd.DataFrame(data=iris.data, columns=iris.feature_names)
iris_data['species'] = iris.target

#  Map target labels to their names
iris_data['species'] = iris_data['species'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

#  Exploratory Data Analysis (Optional Visualization)
sns.pairplot(iris_data, hue='species', diag_kind='kde')
plt.show()

# Split the data into features (X) and target (y)
X = iris_data.drop('species', axis=1)
y = iris_data['species']

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Random Forest Classifier
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

#  Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
print("\nClassification Report:")
print(classification_report(y_test, y_pred))

# Feature Importance Visualization
feature_importance = pd.Series(model.feature_importances_, index=X.columns)
feature_importance.nlargest(4).plot(kind='barh', color='skyblue')
plt.title("Feature Importance")
plt.show()